@model IEPLeaveManagementSystem.Models.EmployeeModel

@{
    ViewBag.Title = "Edit";
    var pageNumber = ViewBag.PageNumber;
}

<br />
<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Employee</h4>
        <hr /><br />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

    <div class="form-group col-sm-6 create-form">
        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-sm-4" })
        <div class="col-sm-8">
            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-sm-4" })
        <div class="col-sm-8">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-sm-4" })
        <div class="col-sm-8">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-sm-4" })
        <div class="col-sm-8">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-sm-4" })
        <div class="col-sm-8">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "control-label col-sm-4" })
        <div class="col-sm-8">
            @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.PhoneNo, htmlAttributes: new { @class = "control-label col-sm-4" })
        <div class="col-sm-8">
            @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PhoneNo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group col-sm-6  create-form">
        @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label col-sm-4" })
        <div class="col-sm-8">
            @Html.EditorFor(model => model.Designation, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.SupervisorID, "SupervisorID", htmlAttributes: new { @class = "control-label col-sm-4" })
        <div class="col-sm-8">
            @Html.DropDownListFor(model => model.SupervisorID, null, "Please select", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SupervisorID, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.IsConfirmed, htmlAttributes: new { @class = "control-label col-sm-4" })
        <div class="col-sm-8">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsConfirmed)
                @Html.ValidationMessageFor(model => model.IsConfirmed, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-sm-4" })
        <div class="col-sm-8">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsActive)
                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.LabelFor(model => model.IsSupervisor, htmlAttributes: new { @class = "control-label col-sm-4" })
        <div class="col-sm-8">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsSupervisor)
                @Html.ValidationMessageFor(model => model.IsSupervisor, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.LabelFor(model => model.IsAdmin, htmlAttributes: new { @class = "control-label col-sm-4" })
        <div class="col-sm-8">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsAdmin)
                @Html.ValidationMessageFor(model => model.IsAdmin, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.LabelFor(model => model.IsHR, htmlAttributes: new { @class = "control-label col-sm-4" })
        <div class="col-sm-8">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsHR)
                @Html.ValidationMessageFor(model => model.IsHR, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

        <div class="form-group create-form">
            <div class="col-sm-offset-9 col-sm-3">
                <input type="hidden" name="page" value=@pageNumber />
                <input type="submit" value="Save" class="btn btn-default custom-btn margin-top-20" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", new {page = pageNumber }) | @Html.ActionLink("Set Leaves", "SetLeave", new { id = Model.ID, page = pageNumber })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


